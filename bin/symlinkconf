#!/usr/bin/env bash
set -eo pipefail

# std color codes
export RST=$(tput sgr0)
export BLD=`tput bold`
export UNBOLD=`tput sgr0`
export RED=$(tput setaf 1)
export GRN=$(tput setaf 2)
export YLW=$(tput setaf 3)
export BLU=$(tput setaf 4)
export PRP=$(tput setaf 5)
export CYA=$(tput setaf 6)
export WHI=$(tput setaf 7)
export GRY=$(tput setaf 008)
export MAG=$(tput setaf 13)

DRY_RUN=0

VALID_ARGS=$(getopt -o fdh --long force,dry-run,help: -- "$@")
if [[ $? -ne 0 ]]; then
    exit 1;
fi

eval set -- "$VALID_ARGS"
while [ : ]; do
  case "$1" in
    -f | --force)
        FORCE=1
        shift
        ;;
    -d | --dry-run)
        DRY_RUN=1
        shift
        ;;
    -h | --help)
        echo 'Usage: symlinkconf [-f|-d]' >&2
        exit
        ;;
    --) shift;
        break
        ;;
  esac
done

# Find location of repo
SCRIPT_DIR=$(dirname $(readlink -f "$0"))
cd "$SCRIPT_DIR"
GIT_ROOT=$(git rev-parse --show-toplevel)
cd - > /dev/null

# Load submodules
cd "$GIT_ROOT"
git submodule update --init --recursive
cd - > /dev/null

# Find files to symlink
CONFIG_FILES="bin .zsh.conf.d "
CONFIG_FILES+=$(
    find "$GIT_ROOT" \
        -regextype posix-extended \
        -maxdepth 1 \
        -type f \
        -name '.*' \
        -not -regex '.*\.(git|gitignore|gnupg)' \
        -printf "%P\n"
)
CONFIG_FILES+=" "
CONFIG_FILES+=$(
    find "$GIT_ROOT/" \
        -regextype posix-extended \
        -mindepth 2 \
        -maxdepth 2 \
        -not -regex '.*/\.git/.*' \
        -not -regex '.*/bin/.*' \
        -not -regex '.*/.zsh.conf.d/.*' \
        -printf "%P\n"
)

NO_CHANGES=1

function log() {
    printf " ${1}%9s${RST}   %s\n" "${2}" "${3/#$HOME/\~}"
}

for CONFIG_FILE in $(echo ${CONFIG_FILES} | sort); do
    SOURCE="${GIT_ROOT}/${CONFIG_FILE}"
    DEST="${HOME}/${CONFIG_FILE}"
    DEST_DIR=$(dirname "${DEST}")
    if [[ ! -d "${DEST_DIR}" ]]; then
        mkdir -p "${DEST_DIR}"
    fi
    if [[ ${FORCE} ]]; then
        log "${red}${BLD}" "FORCED"  "${DEST}"
        echo ln -snf "${SOURCE}" "${DEST}"
    elif [[ -L "${DEST}" ]]; then
        log "${GRN}"       "LINKED"  "${DEST}"
    elif [[ -f "${DEST}" ]] || [[ -d "${DEST}" ]]; then
        log "${CYA}"       "EXISTS"  "${DEST}"
    else # symlinking withou forcing
        NO_CHANGES=0
        log "${YLW}${BLD}" "CREATED" "${DEST}"
        if [[ "${DRY_RUN}" -ne 1 ]]; then
            ln -sn "${SOURCE}" "${DEST}"
        fi
    fi
done
